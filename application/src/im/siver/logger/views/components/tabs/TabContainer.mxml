<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx" minHeight="0" minWidth="0" skinClass="im.siver.logger.views.skins.panel.PanelOutside" xmlns:plus="im.siver.logger.views.components.plus.*" initialize="init()">
	<fx:Script>
		<![CDATA[
        import im.siver.logger.views.components.plus.TabCloseable;

        import spark.components.NavigatorContent;

        import im.siver.logger.controllers.MenuController;

        public function init():void {
            MenuController.addEventListener(MenuController.CLOSE_TAB, removeCurrentTab);
            MenuController.addEventListener(MenuController.NEXT_TAB, nextTab);
            MenuController.addEventListener(MenuController.PREVIOUS_TAB, previousTab);
        }

        /**
         * Add / remove and check for tab
         */
        public function addTab(item:NavigatorContent):void {
            viewstack.addChild(item);
            viewstack.selectedIndex = viewstack.numChildren - 1;
        }

        public function removeTab(item:NavigatorContent):void {
            viewstack.removeChild(item);
        }

        public function removeCurrentTab(e:Event = null):void {
            if (viewstack.getChildren().length == 1) {
                dispatchEvent(new Event(TabCloseable.CLOSE_APPLICATION));
            }
            viewstack.removeChildAt(viewstack.selectedIndex);
        }

        public function checkTab(item:NavigatorContent):Boolean {
            return viewstack.contains(item);
        }

        public function nextTab(event:Event = null):void {
            if (viewstack.numChildren - 1 > viewstack.selectedIndex) {
                viewstack.selectedIndex++;
            }
        }

        public function previousTab(event:Event = null):void {
            if (viewstack.selectedIndex > 0) {
                viewstack.selectedIndex--;
            }
        }
        ]]>
	</fx:Script>
	<s:Group left="5" x="0" y="-22">
		<s:layout>
			<s:HorizontalLayout gap="0"/>
		</s:layout>
		<plus:TabBarCloseable id="tabs" dataProvider="{viewstack}" height="23" width="100%" />
	</s:Group>
	<mx:ViewStack x="0" y="0" id="viewstack" width="100%" height="100%" creationPolicy="all">
	</mx:ViewStack>
</s:SkinnableContainer>
